name: Publish to NPM

on:
  push:
    branches: [main]
    paths:
      - 'package.json'
      - 'src/**'
      - 'tsup.config.ts'
      - 'tsconfig.json'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should_publish: ${{ steps.version_check.outputs.should_publish }}
      current_version: ${{ steps.version_check.outputs.current_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Check if version changed
        id: version_check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "Manual trigger - will publish"
          elif [ "${{ github.event_name }}" = "release" ]; then
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "Release trigger - will publish"
          else
            # Check if package.json version changed in the last commit
            PREV_VERSION=$(git show HEAD~1:package.json | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf8')).version" 2>/dev/null || echo "0.0.0")
            if [ "$CURRENT_VERSION" != "$PREV_VERSION" ]; then
              echo "should_publish=true" >> $GITHUB_OUTPUT
              echo "Version changed from $PREV_VERSION to $CURRENT_VERSION - will publish"
            else
              echo "should_publish=false" >> $GITHUB_OUTPUT
              echo "Version unchanged ($CURRENT_VERSION) - skipping publish"
            fi
          fi

  test:
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.should_publish == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run type-check

      - name: Run lint
        run: npm run lint

      - name: Build package
        run: npm run build

      - name: Test build outputs
        run: |
          # Verify build outputs exist
          ls -la dist/
          test -f dist/client.js
          test -f dist/client.mjs
          test -f dist/client.d.ts
          test -f dist/server.js
          test -f dist/server.mjs
          test -f dist/server.d.ts

  bump-version:
    runs-on: ubuntu-latest
    needs: [check-version, test]
    if: github.event_name == 'workflow_dispatch' && needs.check-version.outputs.should_publish == 'true'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Bump version
        run: |
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to v${{ env.NEW_VERSION }}"
          git push

  publish:
    runs-on: ubuntu-latest
    needs: [check-version, test]
    if: needs.check-version.outputs.should_publish == 'true' && (github.event_name != 'workflow_dispatch' || success())
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: github.event_name != 'release'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-version.outputs.current_version }}
          release_name: Release v${{ needs.check-version.outputs.current_version }}
          body: |
            ## Changes
            
            Auto-generated release for version ${{ needs.check-version.outputs.current_version }}
            
            ### Package Info
            - **Version**: ${{ needs.check-version.outputs.current_version }}
            - **NPM**: https://www.npmjs.com/package/passport-ui/v/${{ needs.check-version.outputs.current_version }}
            
            See [CHANGELOG](./CHANGELOG.md) for detailed changes.
          draft: false
          prerelease: false
